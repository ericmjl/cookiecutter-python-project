name: Code quality checks

on: [pull_request, push]

jobs:
  linting:
    runs-on: ubuntu-latest
    name: Code quality checks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          cache: true

      - name: Run linting on Python files
        run: |
          # Check Python files for basic syntax and style
          python -m py_compile tests/test_post_gen_hook.py

          # Run basic linting if available
          if command -v flake8 &> /dev/null; then
            flake8 tests/ --max-line-length=88 --extend-ignore=E203,W503
          fi

      - name: Check shell script syntax
        run: |
          # Check bash syntax of the post-generation hook
          bash -n hooks/post_gen_project.sh
          bash -n hooks/pre_gen_project.sh

      - name: Validate TOML files
        run: |
          # Check pixi.toml syntax
          python -c "import toml; toml.load('pixi.toml')"

          # Check cookiecutter.json syntax
          python -c "import json; json.load(open('cookiecutter.json'))"

      - name: Check file permissions
        run: |
          # Ensure hook scripts are executable
          if [ ! -x "hooks/post_gen_project.sh" ]; then
            echo "Post-generation hook is not executable"
            exit 1
          fi

          if [ ! -x "hooks/pre_gen_project.sh" ]; then
            echo "Pre-generation hook is not executable"
            exit 1
          fi

          echo "âœ… All hook scripts have correct permissions"
